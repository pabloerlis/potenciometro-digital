  //broker de teste online  brocker = 'broker.hivemq.com'  port = 8000      //broker mosquitto devidamente configurado pra websocket    brocker2 = 'localhost'  port2 = 9001      //identificador do client no servidor  id = "websocket"      //tópico ao qual será subscrito.   topicSubscribe = "potenciometroDigital"      // Crie uma instância do cliente  client = new Paho.MQTT.Client(brocker2, port2, ""); //no lugar do id estou utilizando "" para teste  // definir manipuladores de retorno de chamada  client.onConnectionLost = onConnectionLost;  client.onMessageArrived = onMessageArrived;  // conecte o cliente  client.connect({      onSuccess: onConnect  });  // chamado quando o cliente se conecta  function onConnect() {      // Once a connection has been made, make a subscription and send a message.      console.log("onConnect");      //subscribe no topico mensionado. Obs.: Podemos nos inscrever em quantos tópicos forem necessário. Basta repetir a linha com mensionando o novo tópico.      client.subscribe(topicSubscribe);      //envia uma mensagem para o mesmo tópico ao qual está subscrito a fim de teste.      //send("Página Web", topicSubscribe)  }  // chamado quando o cliente perde sua conexão  function onConnectionLost(responseObject) {      if (responseObject.errorCode !== 0) {          console.log("onConnectionLost:" + responseObject.errorMessage);      }  }  // chamado quando chega uma mensagem  function onMessageArrived(message) {      console.log("onMessageArrived:" + message.payloadString);  }  //envia uma mensagem ao servidor. Espera receber a mensagem e o tópico.  function send(msg, topic) {      message = new Paho.MQTT.Message(msg);      message.destinationName = topic;      client.send(message);  }  const $ = document.getElementById.bind(document)  function DisplayChange(newvalue, valuepot, id) {      document.getElementById(valuepot).textContent = 'counts: ' + newvalue;      send(JSON.stringify([newvalue, id]), 'potenciometroDigital')  }